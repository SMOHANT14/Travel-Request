<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="catalog_script_client">
    <catalog_script_client action="INSERT_OR_UPDATE">
        <active>true</active>
        <applies_catalog>true</applies_catalog>
        <applies_extended>false</applies_extended>
        <applies_req_item>false</applies_req_item>
        <applies_sc_task>false</applies_sc_task>
        <applies_target_record>false</applies_target_record>
        <applies_to>item</applies_to>
        <cat_item display_value="Travel Request">60a14cb097324e101418b696f053aff0</cat_item>
        <cat_variable>IO:2072ed89970f02901418b696f053afc8</cat_variable>
        <condition/>
        <description/>
        <field/>
        <global>true</global>
        <isolate_script>true</isolate_script>
        <messages/>
        <name>Onchange Allowances</name>
        <order/>
        <published_ref/>
        <script><![CDATA[function onChange(control, oldValue, newValue, isLoading) {
    if (isLoading || newValue == '' || newValue == 'no') {
        return;
    }
    g_form.setValue('allowance_updated', false);
 
    // Delay execution for 500 milliseconds to ensure MRVS data is available
    setTimeout(function() {
        var mrvsRows = g_form.getValue("flight_details");
        var oMrvs = JSON.parse(mrvsRows);
        var total_allowance = 0;
        var completedRequests = 0;
 
        // Function to convert currency using GlideCurrencyConverter
        function convertCurrency(amount, fromCurrency, callback) {
            var ga = new GlideAjax('CurrencyConverterAjax');
            ga.addParam('sysparm_name', 'convertCurrency');
            ga.addParam('sysparm_amount', amount);
            ga.addParam('sysparm_from_currency', fromCurrency);
            ga.addParam('sysparm_to_currency', 'USD');
            ga.getXMLAnswer(function(response) {
                var convertedAmount = parseFloat(response);
                callback(convertedAmount);
            });
        }
						//convertCurrency
        // Iterate over MRVS records and convert each allowance to USD
        oMrvs.forEach(function(record) {
            var allowance = parseFloat(record.allowance);
            var currencyType = record.allowance_type;
 
            convertCurrency(allowance, currencyType, function(convertedAmount) {
                total_allowance += convertedAmount;
                completedRequests++;
 
                // Check if all requests are completed
                if (completedRequests === oMrvs.length) {
                    // Set total_allowance and quantity_updated when all conversions are done
                    g_form.setValue("total_allowance", total_allowance);
                 
                }
            });
        });
    }, 500); // 500 milliseconds delay
}
]]></script>
        <sys_class_name>catalog_script_client</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2024-06-25 09:21:16</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>35443bbc970702901418b696f053afb9</sys_id>
        <sys_mod_count>9</sys_mod_count>
        <sys_name>Onchange Allowances</sys_name>
        <sys_overrides/>
        <sys_package display_value="Travel_Request" source="x_1047547_travel_0">9caa3f6897fe0e101418b696f053af8d</sys_package>
        <sys_policy/>
        <sys_scope display_value="Travel_Request">9caa3f6897fe0e101418b696f053af8d</sys_scope>
        <sys_update_name>catalog_script_client_35443bbc970702901418b696f053afb9</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-06-27 06:30:06</sys_updated_on>
        <table/>
        <type>onChange</type>
        <ui_type>10</ui_type>
        <va_supported>false</va_supported>
        <variable_set/>
        <view/>
    </catalog_script_client>
</record_update>
